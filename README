Usage
-----

         -- serial mode --
1) edit greedy.cpp (see below)
2) run 'make Greedy'
3) run './greedy'


         -- mpi --
1) run 'make'
2) mpirun -np NUM_PROCS ./greedympi


run a simple test case with

mpirun -np 1 ./ greedympi RegressionTest/test1.cfg




Running on SuperMike2 with MPI
------------------------------
0) add the following to ~/.soft:
+Intel-13.0.0
@default
+gsl-1.15-Intel-13.0.0
@default
+openmpi-1.6.3-Intel-13.0.0
@default

and run 'resoft'

Next, do

1) open make file and replace mpi install command with

mpicxx -o greedympi greedy.cpp TrainingSet.cpp -I/usr/local/packages/gsl/1.15/Intel-13.0.0/include -L/usr/local/packages/gsl/1.15/Intel-13.0.0/lib -lgsl -lgslcblas -lm

2) run 'make'
3) open mpiGreedyQsub and set number of nodes.
4) run 'qsub mpiGreedyQsub' (this will print a jobID to screen)
5) monitor job with qstat jobID


Running without mpi
-------------------

comment out the following code 
1) include of mpi.h
2) GreedyWorker and GreedyMaster routines
3) MPI::Init and few lines which follow
4) MPI::Finalize()
5) GreedyWorker and GreedyMaster function calls within main() 



To Do
-----
1) make code more generic to handle snapshot S not from GW appliction (greedy class?)
2) for very large problem we will need to recompute the solutions, or read from disk


possible optimization
---------------------
1) multiply all vectors by square root of weights so Euclidean inner product can be used.

WARNING: while making changes to code, make sure one can reproduce the regression test!!!
