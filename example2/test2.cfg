// Configuration file for regression test 1

// inner product information
quad_type      = 2;                  // 0 = LGL, 1 = Reimman sum, 2 = Dynamic
weighted_inner = false;             // whether or not to include a weight W(x)
// if whiten is true, need the following
//asd_file       = "ASD.txt";

// since quad = 2, we need to load the frequency vector from a file
frequency_vector_file = "example2/frequency_vector.txt";

// physical domain [x_min,x_max]
// since we are loading the frequency vector, we do not need to specify
// these
//a           = 40.0;                  // lower value x_min
//b           = 1024.0;                // upper value x_max
//freq_points = 62976;                  // total number of frequency points

// parameter domain and its sampling 
param_dim = 2;
load_from_file = true;                 // load training points from file
ts_file         = "example2/test_bank.txt";       // location of file containing ts points
p1_scale            = 4.9267398257952518e-06;  // convert solar mass to seconds. [Solar Mass in KG] * G / c^2 (G = 6.67428E-11, SolarMass = 1.98892e30, 299792458.0)
p2_scale            = 4.9267398257952518e-06;  // convert solar mass to seconds. [Solar Mass in KG] * G / c^2 (G = 6.67428E-11, SolarMass = 1.98892e30, 299792458.0)

// since we are loading the points from a file, we do not need to
// specify anything about the parameter space
//param_dim      = 2;                     // number of paramteric dimensions (currently supports 2)
//m_size         = 30;                    // # of samples in each parametric direction
//m_low          = 1.0;                   // lower mass value (in solar masses)
//m_high         = 3.0;                   // higher mass value (in solar masses)

// model information
model_name     = "TaylorF2_PN3pt5";     // type of waveform model

// greedy algorithm information
seed           = 0;                     // greedy algorithm seed
tol            = 1e-12;                 // greedy algorithm tolerance ( \| app \|^2)
max_RB         = 1000;                   // estimated number of RB (reasonable upper bound)

// output folder
output_dir = "example2/output";
output_data_format = "txt";
