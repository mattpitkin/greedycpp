Overview
--------
Given a parameterized model h(x;p), whose physical variable is x and
parameterization p. 

From a collection of model evaluations at known at a discrete training set
of parameter p_i and physical x_j points, we have a training space

   { h(x_j;p_i) }

This training space fills up a matrix A such that the i-th row is the model
evaluation h(\vec{x};p_i). 

The routine greedy.cpp finds a low-rank approximation of A by a 
pivoted QR (aka greedy) decomposition. The output are a collection 
of p_i (greedy parameter values), the orthonormal basis, and an 
R-matrix such that 

   A = R * Q 

where the rows of Q are precisely the basis.

Requirements: mpi, libconfig, hdf5 


Quick start
-----------

         -- serial mode --
1) edit greedy.cpp (see below)
2) run 'make Greedy'
3) run './greedy PARAM_FILE.cfg'


         -- mpi --
1) run 'make'
2) mpirun -np NUM_PROCS ./greedympi PARAM_FILE.cfg


Running example 1
-----------------
Lets run an example problem using the configuration file provided in example1/

>>> mpirun -np 4 ./ greedympi example1/test1.cfg

A directory called 'example1_output' should contain the output. Check that 
the output matches whats insides example1 by doing

>>> python regression_test.py example1/ example1_output/

This should report on the differences as well as generating a summary 
html file.


Running on SuperMike2 with MPI
------------------------------
0) add the following to ~/.soft:
+Intel-13.0.0
@default
+gsl-1.15-Intel-13.0.0
@default
+openmpi-1.6.3-Intel-13.0.0
@default

and run 'resoft'

Next, do

1) open make file and replace mpi install command with

mpicxx -o greedympi greedy.cpp TrainingSet.cpp -I/usr/local/packages/gsl/1.15/Intel-13.0.0/include -L/usr/local/packages/gsl/1.15/Intel-13.0.0/lib -lgsl -lgslcblas -lm

2) run 'make'
3) open mpiGreedyQsub and set number of nodes.
4) run 'qsub mpiGreedyQsub' (this will print a jobID to screen)
5) monitor job with qstat jobID


Running without mpi
-------------------

comment out the following code 
1) include of mpi.h
2) GreedyWorker and GreedyMaster routines
3) MPI::Init and few lines which follow
4) MPI::Finalize()
5) GreedyWorker and GreedyMaster function calls within main() 


Troubleshooting
---------------

1) If gsl not found run

gsl-config --cflags --libs-without-cblas

and the output says what must be added to g++ for to compile and link. Standard spot is in /usr/libs or opt/local

2) Install 'libconfig-hr' from macports instead of the package 'libconfig' which is just the c-version



Acknowledgements
----------------
Priscilla Canizares, Collin Capano, Michael PÃ¼rrer, and Rory Smith for careful error reporting, 
code improvements and testing of early versions of the code. 

