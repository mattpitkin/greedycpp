// Configuration file for example test 1

// physical domain [x_min,x_max]
a           = 40.0;                  // lower value x_min
b           = 1024.0;                // upper value x_max
freq_points = 1969;                  // total number of frequency points

// inner product information
quad_type       = 1;                  // 0 = LGL, 1 = Reimman sum
weighted_inner  = false;              // whether or not the inner product to use includes a weight W(x): \int W(x) f(x) g(x)

// parameter domain and its sampling 
param_dim      = 2;                     // number of paramteric dimensions (currently supports 2)
load_from_file = true;                  // load training points from file

//... these parameter matter if load_from_file = false
//m_size         = 30;                    // # of samples in each parametric direction
//m_low          = 1.0;                   // lower mass value (in solar masses)
//m_high         = 3.0;                   // higher mass value (in solar masses)
//p1_scale       = 4.9267398257952518e-06;  // convert solar mass to seconds. [Solar Mass in KG] * G / c^2 (G = 6.67428E-11, SolarMass = 1.98892e30, 299792458.0)
//p2_scale       = 4.9267398257952518e-06;  // convert solar mass to seconds. [Solar Mass in KG] * G / c^2 (G = 6.67428E-11, SolarMass = 1.98892e30, 299792458.0)

//... these matter if load_from_file = true
ts_file_size        = 900;                        // if reading ts from file, specify size
ts_file             = "example1/TS_Points.txt";   // location of file containing ts points
p1_scale            = 4.9267398257952518e-06;  // convert solar mass to seconds. [Solar Mass in KG] * G / c^2 (G = 6.67428E-11, SolarMass = 1.98892e30, 299792458.0)
p2_scale            = 4.9267398257952518e-06;  // convert solar mass to seconds. [Solar Mass in KG] * G / c^2 (G = 6.67428E-11, SolarMass = 1.98892e30, 299792458.0)


// model information
model_str      = "TaylorF2_PN3pt5";     // type of waveform model

// greedy algorithm information
seed           = 0;                     // greedy algorithm seed
tol            = 1e-12;                 // greedy algorithm tolerance ( \| app \|^2)
max_RB         = 300;                   // estimated number of RB (reasonable upper bound)

// output information
out_fldr_str    = "example1_output";
out_file_format = "txt";                // bin (via gsl routines) or txt currently suppported

